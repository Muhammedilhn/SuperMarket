@model ProductUpdateDto
<section class="content content mt-4">
    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">

                    <div class="card card-info">
                        <div class="card-header">
                            <h3 class="card-title">Ürün Güncelle</h3>
                        </div>
                        <!-- /.card-header -->
                        <!-- form start -->
                        <form class="form-horizontal" asp-controller="Products" asp-action="Update" method="post">
                            <div class="card-body">
                                <div class="form-group row">
                                    <input type="hidden" asp-for="Id" />
                                    <div asp-validation-summary="ModelOnly"></div>
                                    <label asp-for="Name" class="col-sm-2 col-form-label">Ürün Adı</label>
                                    <div class="col-sm-10">
                                        <input type="text" asp-for="Name" class="form-control" placeholder="Ürün Adı Giriniz.." value="@Model.Name">
                                        <span asp-validation-for="Name" class="text-danger"></span>
                                    </div>

                                </div>
                                <div class="form-group row">
                                    <label asp-for="ProductType" class="col-sm-2 col-form-label">Ürün Türü</label>
                                    <div class="col-sm-10">
                                        <input type="text" asp-for="ProductType" class="form-control" placeholder="Ürün Türü Girininiz.." value="@Model.ProductType">
                                        <span asp-validation-for="ProductType" class="text-danger"></span>
                                    </div>

                                </div>
                                <div class="form-group row">
                                    <label asp-for="StockCount" class="col-sm-2 col-form-label">Stok Miktarı</label>
                                    <div class="col-sm-10">
                                        <input type="number" asp-for="StockCount" class="form-control" placeholder="Stok Sayısını Giriniz.." value="@Model.StockCount">
                                        <span asp-validation-for="StockCount" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label asp-for="Price" class="col-sm-2 col-form-label">Fiyatı</label>
                                    <div class="col-sm-10">
                                        <input type="text" asp-for="Price" onkeyup="PriceColumnControl()" data-type="currency" class="form-control" placeholder="Fiyat Giriniz.." value="@Model.Price">
                                        <span asp-validation-for="Price" class="text-danger"></span>
                                    </div>

                                </div>
                            </div>
                            <!-- /.card-body -->
                            <div class="card-footer">
                                <button type="submit" class="btn btn-info">Kaydet</button>
                                <a type="button" asp-controller="Products" asp-action="Index" class="btn btn-default float-right">Geri</a>
                            </div>
                            <!-- /.card-footer -->
                        </form>
                    </div>

                </div>
                <!-- /.col -->
            </div>
            <!-- /.row -->
        </div>
        <!-- /.container-fluid -->
    </section>
    <!-- /.content -->


</section>

@section Scripts{
    <script>
        var PriceColumnControl = function () {
            var CurrencyUnitSymbol = "";
            // Input Format
            $("input[data-type='currency']").on({
                keyup: function () {
                    formatCurrency($(this), CurrencyUnitSymbol);
                },
                blur: function () {
                    formatCurrency($(this), CurrencyUnitSymbol, "blur");
                }
            });
            function formatNumber(n, val) {
                // format number 1000000 to 1,234,567

                if (val == 1) {
                    return n.replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ".")
                } else if (val == 0) {
                    return n.replace(/\D/g, "").replace(/\B(?=(\d{5})+(?!\d))/g, ".")
                }

            }
            function formatCurrency(input, currencyUnit, blur) {
                // appends $ to value, validates decimal side
                // and puts cursor back in right position.

                // get input value

                var input_val = input.val();

                // don't validate empty input
                if (input_val === "") { return; }

                // original length
                var original_len = input_val.length;

                // initial caret position
                var caret_pos = input.prop("selectionStart");

                // check for decimal
                if (input_val.indexOf(",") >= 0) {

                    // get position of first decimal
                    // this prevents multiple decimals from
                    // being entered
                    var decimal_pos = input_val.indexOf(",");

                    // split number by decimal point
                    var left_side = input_val.substring(0, decimal_pos);
                    var right_side = input_val.substring(decimal_pos);

                    // add commas to left side of number
                    left_side = formatNumber(left_side, 1);

                    // validate right side
                    right_side = formatNumber(right_side, 0);

                    // On blur make sure 2 numbers after decimal
                    if (blur === "blur") {
                        right_side += "00";
                    }

                    // Limit decimal to only 2 digits
                    right_side = right_side.substring(0, 2);

                    // join number by .
                    input_val = currencyUnit + left_side + "," + right_side;

                } else {
                    // no decimal entered
                    // add commas to number
                    // remove all non-digits
                    input_val = formatNumber(input_val, 1);
                    input_val = currencyUnit + input_val;

                    // final formatting
                    if (blur === "blur") {
                        input_val += ",00";
                    }
                }

                // send updated string to input
                input.val(input_val);

                // put caret back in the right position
                var updated_len = input_val.length;
                caret_pos = updated_len - original_len + caret_pos;
                input[0].setSelectionRange(caret_pos, caret_pos);
            }
        }
    </script>
}